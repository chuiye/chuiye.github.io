<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>木须龙</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-11-06T06:21:32.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Chuiye Kong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Weekly Contest 109</title>
    <link href="http://yoursite.com/2018/11/06/Weekly-Contest-109/"/>
    <id>http://yoursite.com/2018/11/06/Weekly-Contest-109/</id>
    <published>2018-11-06T06:12:27.000Z</published>
    <updated>2018-11-06T06:21:32.000Z</updated>
    
    <content type="html"><![CDATA[<ol start="933"><li><p>Number of Recent Calls</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">class RecentCounter &#123;</span><br><span class="line">    Queue&lt;Integer&gt; ts;</span><br><span class="line"></span><br><span class="line">    public RecentCounter() &#123;</span><br><span class="line">        ts = new LinkedList&lt;&gt;();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    public int ping(int t) &#123;</span><br><span class="line">        while (!ts.isEmpty() &amp;&amp; ts.peek() &lt; t - 3000) &#123;</span><br><span class="line">            ts.poll();</span><br><span class="line">        &#125;</span><br><span class="line">        ts.offer(t);</span><br><span class="line">        return ts.size();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>Shortest Bridge</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">    public int shortestBridge(int[][] a) &#123;</span><br><span class="line">        Set&lt;Integer&gt; visited = new HashSet&lt;&gt;();</span><br><span class="line">        boolean done = false;</span><br><span class="line">        for (int i = 0; i &lt; a.length; i++)&#123;</span><br><span class="line">          for (int j = 0; j &lt; a[0].length; j++) &#123;</span><br><span class="line">              if(a[i][j] == 1) &#123;</span><br><span class="line">                  dfs(a, i, j, visited);</span><br><span class="line">                  done = true;</span><br><span class="line">                  break;</span><br><span class="line">              &#125;</span><br><span class="line">           &#125;</span><br><span class="line">           if (done) break;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        int min = Integer.MAX_VALUE;</span><br><span class="line">        for (int i = 0; i &lt; a.length; i++)&#123;</span><br><span class="line">          for (int j = 0; j &lt; a[0].length; j++) &#123;</span><br><span class="line">              if(a[i][j] == 0) &#123;</span><br><span class="line">                  int dist1 = bfs(a, i, j, 1);</span><br><span class="line">                  int dist2 = bfs(a, i, j, 2);</span><br><span class="line">                  int dist = (dist1 - 1) + (dist2 - 1) + 1;</span><br><span class="line">                  if (dist &lt; min) min = dist;</span><br><span class="line">              &#125;</span><br><span class="line">           &#125;</span><br><span class="line">        &#125;        </span><br><span class="line">        return min;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    private int bfs(int[][] a, int x, int y) &#123;</span><br><span class="line">        Queue&lt;int[]&gt; q = new LinkedList&lt;&gt;();</span><br><span class="line">        Set&lt;Integer&gt; visited = new HashSet&lt;&gt;();</span><br><span class="line">        q.offer(new int[]&#123;x, y&#125;);</span><br><span class="line">        int dist = 0;</span><br><span class="line">        while (!q.isEmpty()) &#123;</span><br><span class="line">            int len = q.size();</span><br><span class="line">            for (int i = 0; i &lt; len; i++) &#123;</span><br><span class="line">                int[] cur = q.poll();</span><br><span class="line">                if (cur[0] &lt; 0 || cur[0] &gt;= a.length | cur[1] &lt; 0 || cur[1] &gt;= a[0].length || visited.contains(cur[0] * a[0].length + cur[1])) continue;</span><br><span class="line">                if (a[cur[0]][cur[1]] == island) &#123;</span><br><span class="line">                    return dist;</span><br><span class="line">                &#125;</span><br><span class="line">                visited.add(cur[0] * a[0].length + cur[1]);</span><br><span class="line">                q.offer(new int[]&#123;cur[0] + 1, cur[1]&#125;);</span><br><span class="line">                q.offer(new int[]&#123;cur[0] - 1, cur[1]&#125;);</span><br><span class="line">                q.offer(new int[]&#123;cur[0], cur[1] + 1&#125;);</span><br><span class="line">                q.offer(new int[]&#123;cur[0], cur[1] - 1&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            dist++;</span><br><span class="line">        &#125;</span><br><span class="line">        return Integer.MAX_VALUE / 2 - 1;</span><br><span class="line">    &#125;</span><br><span class="line">          </span><br><span class="line">    private void dfs(int[][] a, int i, int j, Set&lt;Integer&gt; visited) &#123;</span><br><span class="line">        if (i &lt; 0 || i &gt;= a.length || j &lt; 0 || j &gt;= a[0].length || a[i][j] != 1 || visited.contains(i * a[0].length + j)) return;</span><br><span class="line">        a[i][j] = 2;</span><br><span class="line">        visited.add(i * a[0].length + j);</span><br><span class="line">        dfs(a, i+1, j, visited);</span><br><span class="line">        dfs(a, i-1, j, visited);</span><br><span class="line">        dfs(a, i, j-1, visited);</span><br><span class="line">        dfs(a, i, j+1, visited);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>Knight Dialer</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">   int[][] stops = &#123;&#123;4,6&#125;, &#123;6,8&#125;, &#123;7,9&#125;, &#123;4,8&#125;, &#123;0,3,9&#125;, &#123;5,5&#125;, &#123;0,1,7&#125;, &#123;2,6&#125;, &#123;1, 3&#125;, &#123;2, 4&#125;&#125;;</span><br><span class="line">   List&lt;String&gt; res = new ArrayList&lt;&gt;();</span><br><span class="line">   long ans = 0;</span><br><span class="line">   public int knightDialer(int N) &#123;</span><br><span class="line">       if(N == 0) return 0;</span><br><span class="line">       long[][] dp = new long[N][10];</span><br><span class="line">       for(int i = 0; i &lt; 10; i++)&#123;</span><br><span class="line">           dp[0][i] = 1;</span><br><span class="line">       &#125;</span><br><span class="line">       for(int i = 1; i &lt; N; i++)&#123;</span><br><span class="line">           for(int j = 0; j &lt; 10; j++)&#123;</span><br><span class="line">               if(j == 5) continue;</span><br><span class="line">               if(j == 0)&#123;</span><br><span class="line">                   dp[i][j] += dp[i-1][4] + dp[i-1][6];</span><br><span class="line">               &#125;else if(j == 1)&#123;</span><br><span class="line">                   dp[i][j] += dp[i-1][8] + dp[i-1][6];</span><br><span class="line">               &#125;else if(j == 2)&#123;</span><br><span class="line">                   dp[i][j] += dp[i-1][7] + dp[i-1][9];</span><br><span class="line">               &#125;else if(j == 3)&#123;</span><br><span class="line">                   dp[i][j] += dp[i-1][4] + dp[i-1][8];</span><br><span class="line">               &#125;else if(j == 4)&#123;</span><br><span class="line">                   dp[i][j] += dp[i-1][0] + dp[i-1][9] + dp[i-1][3];</span><br><span class="line">               &#125;else if(j == 6)&#123;</span><br><span class="line">                   dp[i][j] += dp[i-1][0] + dp[i-1][1] + dp[i-1][7];</span><br><span class="line">               &#125;else if(j == 7)&#123;</span><br><span class="line">                   dp[i][j] += dp[i-1][2] + dp[i-1][6];</span><br><span class="line">               &#125;else if(j == 8)&#123;</span><br><span class="line">                   dp[i][j] += dp[i-1][1] + dp[i-1][3];</span><br><span class="line">               &#125;else if(j == 9)&#123;</span><br><span class="line">                   dp[i][j] += dp[i-1][2] + dp[i-1][4];</span><br><span class="line">               &#125;</span><br><span class="line">               dp[i][j] %= 1000000007;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       for(int j = 0; j &lt; 10; j++)&#123;</span><br><span class="line">           ans += dp[N-1][j]; </span><br><span class="line">           ans %= 1000000007;</span><br><span class="line">       &#125;</span><br><span class="line">       return (int)(ans);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol start=&quot;933&quot;&gt;
&lt;li&gt;&lt;p&gt;Number of Recent Calls&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/
      
    
    </summary>
    
    
      <category term="Contest" scheme="http://yoursite.com/tags/Contest/"/>
    
      <category term="933" scheme="http://yoursite.com/tags/933/"/>
    
      <category term="935" scheme="http://yoursite.com/tags/935/"/>
    
      <category term="934" scheme="http://yoursite.com/tags/934/"/>
    
  </entry>
  
  <entry>
    <title>843. Guess the Word</title>
    <link href="http://yoursite.com/2018/11/02/843-Guess-the-Word/"/>
    <id>http://yoursite.com/2018/11/02/843-Guess-the-Word/</id>
    <published>2018-11-03T03:18:51.000Z</published>
    <updated>2018-11-03T03:19:44.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">    public void findSecretWord(String[] wordlist, Master master) &#123;</span><br><span class="line">        for (int i = 0, x = 0; i &lt; 10 &amp;&amp; x &lt; 6; i++) &#123;</span><br><span class="line">            Map&lt;String, Integer&gt; countZeroMatches = new HashMap&lt;&gt;();</span><br><span class="line">            for (String word1: wordlist) &#123;</span><br><span class="line">                for (String word2: wordlist) &#123;</span><br><span class="line">                    if (match(word1, word2) == 0) &#123;</span><br><span class="line">                        countZeroMatches.put(word1, countZeroMatches.getOrDefault(word1, 0) + 1);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            int min = 1000;</span><br><span class="line">            String minZeroMatchesWord = &quot;&quot;;</span><br><span class="line">            for (String word: wordlist) &#123;</span><br><span class="line">                if (countZeroMatches.getOrDefault(word, 0) &lt; min) &#123;</span><br><span class="line">                    min = countZeroMatches.getOrDefault(word, 0);</span><br><span class="line">                    minZeroMatchesWord = word;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            x = master.guess(minZeroMatchesWord);</span><br><span class="line">            List&lt;String&gt; wordlist2 = new ArrayList&lt;&gt;();</span><br><span class="line">            for (String word: wordlist) &#123;</span><br><span class="line">                if (match(minZeroMatchesWord, word) == x) &#123;</span><br><span class="line">                    wordlist2.add(word);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            wordlist = wordlist2.toArray(new String[0]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    private int match(String word1, String word2) &#123;</span><br><span class="line">        int count = 0;</span><br><span class="line">        for (int i = 0; i &lt; word1.length(); i++) &#123;</span><br><span class="line">            if (word1.charAt(i) == word2.charAt(i)) count++;</span><br><span class="line">        &#125;</span><br><span class="line">        return count;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
    
      <category term="Google" scheme="http://yoursite.com/tags/Google/"/>
    
      <category term="Airbnb" scheme="http://yoursite.com/tags/Airbnb/"/>
    
      <category term="interactive problem" scheme="http://yoursite.com/tags/interactive-problem/"/>
    
  </entry>
  
  <entry>
    <title>850. Rectangle Area II</title>
    <link href="http://yoursite.com/2018/11/01/850-Rectangle-Area-II/"/>
    <id>http://yoursite.com/2018/11/01/850-Rectangle-Area-II/</id>
    <published>2018-11-02T03:52:14.000Z</published>
    <updated>2018-11-02T03:54:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Too hard for me T^T have to come back tmr …<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">    class Point &#123;</span><br><span class="line">        int x, y, val;</span><br><span class="line">        Point (int x, int y, int val) &#123;</span><br><span class="line">            this.x = x;</span><br><span class="line">            this.y = y;</span><br><span class="line">            this.val = val;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    public int rectangleArea(int[][] rectangles) &#123;</span><br><span class="line">        int M = 1000000007;</span><br><span class="line">        List&lt;Point&gt; data = new ArrayList&lt;&gt;();</span><br><span class="line">        for (int[] r: rectangles) &#123;</span><br><span class="line">            data.add(new Point(r[0], r[1], 1));</span><br><span class="line">            data.add(new Point(r[2], r[3], 1));</span><br><span class="line">            data.add(new Point(r[0], r[3], -1));</span><br><span class="line">            data.add(new Point(r[2], r[1], -1));</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        Collections.sort(data, (a, b) -&gt; (a.x - b.x));</span><br><span class="line">        TreeMap&lt;Integer, Integer&gt; map = new TreeMap&lt;&gt;();</span><br><span class="line">        int preX = -1, preY = -1, result = 0;</span><br><span class="line">        for (int i = 0; i &lt; data.size(); i++) &#123;</span><br><span class="line">            Point p = data.get(i);</span><br><span class="line">            map.put(p.y, map.getOrDefault(p.y, 0) + p.val);</span><br><span class="line">            if ( i == data.size() - 1 || data.get(i + 1).x &gt; p.x) &#123;</span><br><span class="line">                if (preX &gt; -1) &#123;</span><br><span class="line">                    result += ((long) preY * (p.x - preX)) % M;</span><br><span class="line">                    result %= M;</span><br><span class="line">                &#125;</span><br><span class="line">                preY = calcY(map);</span><br><span class="line">                preX = p.x;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return result;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    private int calcY(TreeMap&lt;Integer, Integer&gt; map) &#123;</span><br><span class="line">        int result = 0, pre = -1, count = 0;</span><br><span class="line">        for (Map.Entry&lt;Integer, Integer&gt; e: map.entrySet()) &#123;</span><br><span class="line">            if (pre &gt;= 0 &amp;&amp; count &gt; 0) &#123;</span><br><span class="line">                result += e.getKey() - pre;</span><br><span class="line">            &#125;</span><br><span class="line">            count += e.getValue();</span><br><span class="line">            pre = e.getKey();</span><br><span class="line">        &#125;</span><br><span class="line">        return result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Too hard for me T^T have to come back tmr …&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/s
      
    
    </summary>
    
    
      <category term="Google" scheme="http://yoursite.com/tags/Google/"/>
    
      <category term="TreeMap" scheme="http://yoursite.com/tags/TreeMap/"/>
    
      <category term="Redo" scheme="http://yoursite.com/tags/Redo/"/>
    
  </entry>
  
  <entry>
    <title>135. Candy</title>
    <link href="http://yoursite.com/2018/10/31/135-Candy/"/>
    <id>http://yoursite.com/2018/10/31/135-Candy/</id>
    <published>2018-11-01T04:06:20.000Z</published>
    <updated>2018-11-01T04:07:56.000Z</updated>
    
    <content type="html"><![CDATA[<p>Happy Halloween!<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">    public int candy(int[] ratings) &#123;</span><br><span class="line">        int[] nums = new int[ratings.length];</span><br><span class="line">        Arrays.fill(nums, 1);</span><br><span class="line">        for (int i = 1; i &lt; ratings.length; i++) &#123;</span><br><span class="line">            if (ratings[i] &gt; ratings[i - 1]) &#123;</span><br><span class="line">                nums[i] = nums[i - 1] + 1;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        for (int i = ratings.length - 2; i &gt;= 0; i--) &#123;</span><br><span class="line">            if (ratings[i] &gt; ratings[i + 1]) &#123;</span><br><span class="line">                nums[i] = Math.max(nums[i], nums[i + 1] + 1);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        int res = 0;</span><br><span class="line">        for (int num: nums) &#123;</span><br><span class="line">            res += num;</span><br><span class="line">        &#125;</span><br><span class="line">        return res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Happy Halloween!&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;
      
    
    </summary>
    
    
      <category term="Array" scheme="http://yoursite.com/tags/Array/"/>
    
      <category term="Google" scheme="http://yoursite.com/tags/Google/"/>
    
      <category term="Uber" scheme="http://yoursite.com/tags/Uber/"/>
    
      <category term="Greedy" scheme="http://yoursite.com/tags/Greedy/"/>
    
  </entry>
  
  <entry>
    <title>128. Longest Consecutive Sequence</title>
    <link href="http://yoursite.com/2018/10/31/128-Longest-Consecutive-Sequence/"/>
    <id>http://yoursite.com/2018/10/31/128-Longest-Consecutive-Sequence/</id>
    <published>2018-11-01T03:43:35.000Z</published>
    <updated>2018-11-01T04:10:12.000Z</updated>
    
    <content type="html"><![CDATA[<p>Not my favorite problem …<br>Time complexity O(N), run time beats 86.45% java submission.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">    public int longestConsecutive(int[] nums) &#123;</span><br><span class="line">        Set&lt;Integer&gt; set = new HashSet&lt;&gt;();</span><br><span class="line">        for (int num: nums) &#123;</span><br><span class="line">            set.add(num);</span><br><span class="line">        &#125;</span><br><span class="line">        int max = 0;</span><br><span class="line">        for (int num: nums) &#123;</span><br><span class="line">            if (set.contains(num - 1)) continue;</span><br><span class="line">            int next = num + 1, len = 1;</span><br><span class="line">            while (set.contains(next)) &#123;</span><br><span class="line">                next++;</span><br><span class="line">                len++;</span><br><span class="line">            &#125;</span><br><span class="line">            max = Math.max(len, max);</span><br><span class="line">        &#125;</span><br><span class="line">        return max;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>Another solution from LeetCode discuss,<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">public int longestConsecutive(int[] num) &#123;</span><br><span class="line">    int res = 0;</span><br><span class="line">    HashMap&lt;Integer, Integer&gt; map = new HashMap&lt;Integer, Integer&gt;();</span><br><span class="line">    for (int n : num) &#123;</span><br><span class="line">        if (!map.containsKey(n)) &#123;</span><br><span class="line">            int left = (map.containsKey(n - 1)) ? map.get(n - 1) : 0;</span><br><span class="line">            int right = (map.containsKey(n + 1)) ? map.get(n + 1) : 0;</span><br><span class="line">            // sum: length of the sequence n is in</span><br><span class="line">            int sum = left + right + 1;</span><br><span class="line">            map.put(n, sum);</span><br><span class="line">            </span><br><span class="line">            // keep track of the max length </span><br><span class="line">            res = Math.max(res, sum);</span><br><span class="line">            </span><br><span class="line">            // extend the length to the boundary(s)</span><br><span class="line">            // of the sequence</span><br><span class="line">            // will do nothing if n has no neighbors</span><br><span class="line">            map.put(n - left, sum);</span><br><span class="line">            map.put(n + right, sum);</span><br><span class="line">        &#125;</span><br><span class="line">        else &#123;</span><br><span class="line">            // duplicates</span><br><span class="line">            continue;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Not my favorite problem …&lt;br&gt;Time complexity O(N), run time beats 86.45% java submission.&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;
      
    
    </summary>
    
    
      <category term="Array" scheme="http://yoursite.com/tags/Array/"/>
    
      <category term="Google" scheme="http://yoursite.com/tags/Google/"/>
    
      <category term="Facebook" scheme="http://yoursite.com/tags/Facebook/"/>
    
      <category term="Amazon" scheme="http://yoursite.com/tags/Amazon/"/>
    
      <category term="Microsoft" scheme="http://yoursite.com/tags/Microsoft/"/>
    
      <category term="Oracle" scheme="http://yoursite.com/tags/Oracle/"/>
    
      <category term="Uber" scheme="http://yoursite.com/tags/Uber/"/>
    
  </entry>
  
  <entry>
    <title>418. Sentence Screen Fitting</title>
    <link href="http://yoursite.com/2018/10/30/418-Sentence-Screen-Fitting/"/>
    <id>http://yoursite.com/2018/10/30/418-Sentence-Screen-Fitting/</id>
    <published>2018-10-31T03:27:56.000Z</published>
    <updated>2018-10-31T03:59:29.000Z</updated>
    
    <content type="html"><![CDATA[<p>Took my Japanese class today, it was fun. But I’m so tired now, just did one medium Google problem, with two solutions. Not a bad day …<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">    public int wordsTyping(String[] sentence, int rows, int cols) &#123;</span><br><span class="line">        String s = String.join(&quot; &quot;, sentence) + &quot; &quot;;</span><br><span class="line">        int start = 0, l = s.length();</span><br><span class="line">        for (int i = 0; i &lt; rows; i++) &#123;</span><br><span class="line">            start += cols;</span><br><span class="line">            if (s.charAt(start % l) == &apos; &apos;) &#123;</span><br><span class="line">                start++;</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                while (start &gt; 0 &amp;&amp; s.charAt((start-1) % l) != &apos; &apos;) &#123;</span><br><span class="line">                    start--;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return start / s.length();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">    public int wordsTyping(String[] sentence, int rows, int cols) &#123;</span><br><span class="line">        int[] dp = new int[sentence.length];</span><br><span class="line">        int n = sentence.length;</span><br><span class="line">        for(int i = 0, prev = 0, len = 0; i &lt; sentence.length; ++i) &#123;</span><br><span class="line">            if(i != 0 &amp;&amp; len &gt; 0) len -= sentence[i - 1].length() + 1;</span><br><span class="line">            while(len + sentence[prev % n].length() &lt;= cols) len += sentence[prev++ % n].length() + 1;</span><br><span class="line">            dp[i] = prev;</span><br><span class="line">        &#125;</span><br><span class="line">        int count = 0;</span><br><span class="line">        for(int i = 0, k = 0; i &lt; rows; ++i) &#123;</span><br><span class="line">            count += dp[k] - k;</span><br><span class="line">            k = dp[k] % n;</span><br><span class="line">        &#125;</span><br><span class="line">        return count / n;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Took my Japanese class today, it was fun. But I’m so tired now, just did one medium Google problem, with two solutions. Not a bad day …&lt;b
      
    
    </summary>
    
    
      <category term="Google" scheme="http://yoursite.com/tags/Google/"/>
    
      <category term="string" scheme="http://yoursite.com/tags/string/"/>
    
      <category term="Dynamic Programming" scheme="http://yoursite.com/tags/Dynamic-Programming/"/>
    
  </entry>
  
  <entry>
    <title>100 Day Project - Learning Japanese</title>
    <link href="http://yoursite.com/2018/10/29/100-Day-Project-Learning-Japanese/"/>
    <id>http://yoursite.com/2018/10/29/100-Day-Project-Learning-Japanese/</id>
    <published>2018-10-30T04:29:53.000Z</published>
    <updated>2018-10-30T04:59:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>Tomorrow, I’m going to take my first Japanese lesson from an informal class I’ve signed up. I’ve always wanted to learn Japanese but gave up just at the beginning of every time. Hopefully, I can go further this time. To me, learning a new language is a chance to view the world differently and to think differently. Why the personalities of people from different countries are so different? And why do people have so much in common when they are speaking similar languages? I’m not a native English speaker, but I can feel the upper, cheerful tone of English actually makes people feel happier, less stressful, even less reasonable in some sense lol. While Chinese speakers are usually discreet in word and deed, the ancient far eastern culture impacts its language and its people profoundly. Japanese always makes me curious in the way that Japan also has the same asian culture, but at the same time it has the kind of delicacy that’s hard find in other countries, which I’m so fascinated about. Plus, it’s easier to learn since it has some similarities with Chinese anyway. Tomorrow, we shall see.</p><blockquote><p>Intelligence is an accident of evolution, and not necessarily an advantage.</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Tomorrow, I’m going to take my first Japanese lesson from an informal class I’ve signed up. I’ve always wanted to learn Japanese but gave
      
    
    </summary>
    
      <category term="Minecraft" scheme="http://yoursite.com/categories/Minecraft/"/>
    
    
      <category term="100DayProject" scheme="http://yoursite.com/tags/100DayProject/"/>
    
      <category term="Japanese" scheme="http://yoursite.com/tags/Japanese/"/>
    
  </entry>
  
  <entry>
    <title>815. Bus Routes</title>
    <link href="http://yoursite.com/2018/10/29/815-Bus-Routes/"/>
    <id>http://yoursite.com/2018/10/29/815-Bus-Routes/</id>
    <published>2018-10-30T04:21:49.000Z</published>
    <updated>2018-10-30T04:23:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>Two google hard problems in a day? What a feast!<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">    public int numBusesToDestination(int[][] routes, int S, int T) &#123;</span><br><span class="line">        if (S == T) return 0;</span><br><span class="line">        Set&lt;Integer&gt; visited = new HashSet&lt;&gt;();</span><br><span class="line">        Queue&lt;Integer&gt; q = new LinkedList&lt;&gt;();</span><br><span class="line">        Map&lt;Integer, ArrayList&lt;Integer&gt;&gt; map = new HashMap&lt;&gt;();</span><br><span class="line">        int res = 0;</span><br><span class="line">        for (int i = 0; i &lt; routes.length; i++) &#123;</span><br><span class="line">            for (int j = 0; j &lt; routes[i].length; j++) &#123;</span><br><span class="line">                ArrayList&lt;Integer&gt; buses = map.getOrDefault(routes[i][j], new ArrayList&lt;&gt;());</span><br><span class="line">                buses.add(i);</span><br><span class="line">                map.put(routes[i][j], buses);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        q.offer(S);</span><br><span class="line">        while (!q.isEmpty()) &#123;</span><br><span class="line">            int len = q.size();</span><br><span class="line">            res++;</span><br><span class="line">            for (int i = 0; i &lt; len; i++) &#123;</span><br><span class="line">                int cur = q.poll();</span><br><span class="line">                ArrayList&lt;Integer&gt; buses = map.get(cur);</span><br><span class="line">                for (int bus: buses) &#123;</span><br><span class="line">                    if (visited.contains(bus)) continue;</span><br><span class="line">                    visited.add(bus);</span><br><span class="line">                    for (int j = 0; j &lt; routes[bus].length; j++) &#123;</span><br><span class="line">                        if (routes[bus][j] == T) return res;</span><br><span class="line">                        q.offer(routes[bus][j]);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return -1;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Two google hard problems in a day? What a feast!&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;
      
    
    </summary>
    
    
      <category term="Google" scheme="http://yoursite.com/tags/Google/"/>
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
      <category term="BFS" scheme="http://yoursite.com/tags/BFS/"/>
    
  </entry>
  
  <entry>
    <title>857. Minimum Cost to Hire K Workers</title>
    <link href="http://yoursite.com/2018/10/29/857-Minimum-Cost-to-Hire-K-Workers/"/>
    <id>http://yoursite.com/2018/10/29/857-Minimum-Cost-to-Hire-K-Workers/</id>
    <published>2018-10-30T01:39:40.000Z</published>
    <updated>2018-10-30T03:39:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>Today, Fluffy God recommended this problem to me, credit to Fluffy God LOL. It’s said to be a high-frequency Google interview problem.<br>One key thing is, apart from thinking of wage[i] : quality[i] = wage[j] : quality[j], to know that because workers are sorted by ratio of wage/quality,  for every ratio, we find the minimum possible total quality of K workers.<br>Thus, we use PriorityQueue to remove a worker with highest quality so that we keep K workers in the group.<br>Yay, day 1 is done!<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">    public double mincostToHireWorkers(int[] q, int[] w, int K) &#123;</span><br><span class="line">        double[][] workers = new double[q.length][2];</span><br><span class="line">        for (int i = 0; i &lt; q.length; i++) &#123;</span><br><span class="line">            workers[i] = new double[]&#123;(double)w[i] / q[i], (double)q[i]&#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        Arrays.sort(workers, (a, b) -&gt; Double.compare(a[0], b[0]));</span><br><span class="line">        double res = Double.MAX_VALUE, qsum = 0;</span><br><span class="line">        PriorityQueue&lt;Double&gt; pq = new PriorityQueue&lt;&gt;();</span><br><span class="line">        for (double[] worker: workers) &#123;</span><br><span class="line">            if (pq.size() == K) qsum += pq.poll();</span><br><span class="line">            qsum += worker[1];</span><br><span class="line">            pq.offer(-worker[1]);</span><br><span class="line">            if (pq.size() == K) res = Math.min(res, qsum * worker[0]);</span><br><span class="line">        &#125;</span><br><span class="line">        return res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Today, Fluffy God recommended this problem to me, credit to Fluffy God LOL. It’s said to be a high-frequency Google interview problem.&lt;br
      
    
    </summary>
    
    
      <category term="Google" scheme="http://yoursite.com/tags/Google/"/>
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
      <category term="Heap" scheme="http://yoursite.com/tags/Heap/"/>
    
  </entry>
  
  <entry>
    <title>100 Day Project - LeetCode</title>
    <link href="http://yoursite.com/2018/10/28/hello-world/"/>
    <id>http://yoursite.com/2018/10/28/hello-world/</id>
    <published>2018-10-28T22:08:08.000Z</published>
    <updated>2018-10-29T04:25:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is my first 100-day project. During this 100 days, I will solve at lease 1 <a href="https://leetcode.com/" target="_blank" rel="noopener">LeetCode</a> problem everyday and participate in the Contest every Saturday. I’m not in job search, instead I feel quite challenging and enjoyable to work on algorithm problems under not much pressure. I plan to post most of my notes and solution here when I see interesting problems. </p><p>As Isaac Asimov said:</p><blockquote><p>The true delight is in the finding out rather than in the knowing.</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;This is my first 100-day project. During this 100 days, I will solve at lease 1 &lt;a href=&quot;https://leetcode.com/&quot; target=&quot;_blank&quot; rel=&quot;noop
      
    
    </summary>
    
      <category term="Minecraft" scheme="http://yoursite.com/categories/Minecraft/"/>
    
    
      <category term="100DayProject" scheme="http://yoursite.com/tags/100DayProject/"/>
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
</feed>
